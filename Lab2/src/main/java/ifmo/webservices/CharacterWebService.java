
package ifmo.webservices;

import ifmo.webservices.client.ObjectFactory;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1-SNAPSHOT
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CharacterWebService", targetNamespace = "http://webservices.ifmo/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CharacterWebService {


    /**
     * 
     * @return
     *     returns java.util.List<ifmo.webservices.Character>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCharacters", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.GetAllCharacters")
    @ResponseWrapper(localName = "getAllCharactersResponse", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.GetAllCharactersResponse")
    public List<Character> getAllCharacters();

    /**
     * 
     * @param conditions
     * @return
     *     returns java.util.List<ifmo.webservices.Character>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCharacters", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.GetCharacters")
    @ResponseWrapper(localName = "getCharactersResponse", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.GetCharactersResponse")
    public List<Character> getCharacters(
            @WebParam(name = "conditions", targetNamespace = "")
                    List<CharacterFieldValue> conditions);

    /**
     *
     * @param id
     * @param newValues
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifyCharacter", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.ModifyCharacter")
    @ResponseWrapper(localName = "modifyCharacterResponse", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.ModifyCharacterResponse")
    public boolean modifyCharacter(
            @WebParam(name = "id", targetNamespace = "")
                    int id,
            @WebParam(name = "newValues", targetNamespace = "")
                    List<CharacterFieldValue> newValues);

    /**
     *
     * @param character
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCharacter", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.AddCharacter")
    @ResponseWrapper(localName = "addCharacterResponse", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.AddCharacterResponse")
    public int addCharacter(
            @WebParam(name = "character", targetNamespace = "")
                    Character character);

    /**
     *
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCharacter", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.DeleteCharacter")
    @ResponseWrapper(localName = "deleteCharacterResponse", targetNamespace = "http://webservices.ifmo/", className = "ifmo.webservices.client.DeleteCharacterResponse")
    public boolean deleteCharacter(
            @WebParam(name = "id", targetNamespace = "")
                    int id);

}
